<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxASLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
  <data name="mpLabel1.Text" xml:space="preserve">
    <value>The USBUIRT is an external USB device which allows MediaPortal to both Transmit and Receive infrared signals. With USBUIRT you can tell mediaportal to remote control your settop box and/or you can control mediaportal using any remote control you may have.

http://www.usbuirt.com/
</value>
  </data>
</root>