Title: TheAlgorithm - How the PowerScheduler sleeps and wakes.
Author: dero

Preamble
--------

This document specifies the shutdown/wakeup algorithm of the PowerScheduler.

Algorithm
---------

A system is not allowed to go to standby when it is Busy.

A system that is Unattended goes to standby as soon as it is not Busy (anymore).

A system that is resumed resets LastUserTime to the current time.

A system that goes to standby sets the wakeup timer to the time smallest
time returned by any WH minus PreWakeupTime. If this time is LESS than 45
seconds (wakeup too near), the timer is set to 45. Reason: When the timer is
set to a value too small, the timer could be fired while the system is 
going to standby. Then the wakeup will not work.

Terms
-----

StandbyHandler (SH): A StandbyHandler allows or disallows standby at the 
	current time.
	
WakeupHandler (WH): A WakeupHandler specifies a time the system should be awake 
	up in the future.
	
PreWakeupTime: The time the system should be waken before some event returned 
  by some WH is due. (To compensate the boot-up time.) 60 seconds is good.
  
PreNoShutdownTime: The time the system is not allowed to go to standby before
  some event returned by some WH is due. MUST (!) be at least PreWakeupTime.
  120 seconds is good. 
	
Busy: The system is busy, if one of the following conditions hold:
  - Some SH disallows standby
  - Some WH specifies a time to wakeup that is within the PreNoShutdownInterval
  - MediaPortal: Some player is playing or - depending on config - MediaPortal
    is not in home screen
   
LastUserTime: The last time the user was active. We recognize mouse moves and
  keyboard input. MediaPortal: The LastUserTime is also renewed when some
  action is recognized (remote control) and periodically while a player is 
  playing or - depending on config - MediaPortal is not in home screen, i.e. 
  LastUserTime stalls when the player is off and - d.o.c. - MP is in home 
  screen.
  
IdleTimeout: The time that must pass since LastUserTime to say that the system
  is unattended.
  
Unattended: The system is Unattended when the LastUserTime is at least the time
  specified by IdleTimeout ago.
  
Standby/Wakeup-Handler Possible Race Condition
----------------------------------------------
When implemention SH and WH for the same event, e.g. TV-recording, the 
following possible race condition MUST be excluded:

A WH and a SH for the same event must be seamless in terms of time, i.e. 
when the time specified by the WH passed, the SH must instantly (with no 
latency) disallow the shutdown. If there would be any latency between the 
time the WH returned and the internal start of the event, the PS could
right go standby in this very small time window.

Assume that you'd like to record a show at 8 p.m. The WH tellst to wake up
the system at 8 p.m. When 8 p.m. is passing by, the SH must instantly disallow 
the standby EVEN if the recorder has not picked up the recording yet, 
otherwise the shutdown could occur right after 8 p.m. and the show is missed.
For this reason, TVControler.CanSuspend not only checks whether some card
is recording, but also checks the schedule for any recordings that are due
(but not already recording).
