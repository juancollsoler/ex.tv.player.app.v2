<?xml version="1.0" encoding="utf-8" ?>

<!-- This file is a sample .NET configuration file. To enable logging in Gentle you must
     either include this as your main configuration file or add the log4net section handler
     and log4net section to your own configuration file. 
     
     Gentle itself will read settings from here if a <gentle> section handler has been
     declared. If it is not present, Gentle will look for a file called Gentle.config.
     You can specify the location and name of the stand-alone config file by adding an
     entry to the AppSettings section of this file. Last, you can manually pass an XML 
     fragment to Gentle's Configurator class and force Gentle to use that. -->

<configuration>

    <!-- This section is used by the .NET framework to identify which handler to use for which
         section in the XML confoguration file. -->
    <configSections>
        <!-- Register a section handler for Gentle (the <gentle> section) -->
        <section name="gentle" type="Gentle.Common.GentleSectionHandler, Gentle.Common" />
        <!-- Register a section handler for the log4net section -->
        <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    </configSections>

    <!-- This section contains the Gentle configuration settings -->
    <gentle>
        <Gentle.Framework>
        
            <!-- See the API documentation for the Gentle.Framework.GentleSettings class for
                 detailed information on the keys available in the Options section -->
            <Options>
        
                <!-- the default timeout value in seconds for IDbCommand instances created by Gentle -->
                <CommandTimeout>30</CommandTimeout>     

                <!-- whether to enable support for Gentle-managed concurrency control columns -->
                <ConcurrencyControl>false</ConcurrencyControl>
                
                <!-- options: Attributes or XML (XML currently unused) -->
                <MasterDefinition>Attributes</MasterDefinition>
                <Analyzer>
                    <!-- options: None, OnDemand (the default), Full -->
                    <Level>Full</Level>
                    <!-- whether to warn about unmapped columns and other non-fatal errors -->
                    <Silent>false</Silent>
                </Analyzer>

                <Cache>
                    <!-- default cache strategy (use only Never or Temporary) -->
                    <DefaultStrategy>Temporary</DefaultStrategy>
                    <CacheStatements>true</CacheStatements>
                    <CacheObjects>true</CacheObjects>
                    <!-- when true Gentle will try to bypass query execution and compose
                         the result from cached data alone -->
                    <SkipQueryExecution>true</SkipQueryExecution>
                    <!-- the scope within which to ensure uniqing 
                         options: Thread (default), Application or WebSession -->
                    <UniqingScope>Thread</UniqingScope>
                </Cache>
        
                <Logging>
                    <!-- This setting controls the lowest log level emitted. See the
		                 Verbosity enum for details on the available values. -->
        		    <Verbosity>Debug</Verbosity>
            		<!-- Do not edit this unless you know what you're doing. This setting
                 		 controls at what level error conditions are considered fatal.  -->
            		<Frailty>Debug</Frailty>

		            <!-- Use values defined in the LogCategories enum to turn logging on/off
        		         for selected categories. The available values include:
		                 	All (all categories)
                   			StatementExecutionRead (select statements)
                   			StatementExecutionWrite (insert/update/delete statements)
                   			StatementExecutionOther (any other kind of statement)
                   			StatementExecution (any kind of statement; same as all three groups above)
                   			Cache (cache accesses)
                   			Metadata (metadata updates)
                   			General (everything else) -->
                    <!-- The following sample first disables all categories, then selectively
                         turns on various subcategories -->
                    <Category name="All" enabled="false" />
                    <Category name="StatementExecution" enabled="true" />
                    <Category name="Cache" enabled="true" />
					<Category name="Metadata" enabled="true" />
                </Logging>
            </Options>

            <!--            
            <NamespaceProviders>
                <Namespace namespace="Gentle.First"  provider="SQLServer" connectionstring="..." />
                <Namespace namespace="Gentle.Second" provider="SQLServer" connectionString="..." />
            </NamespaceProviders>
            -->
            
		    <DefaultProvider name="SQLServer" connectionString="..." />

            <!--
            <DefaultProvider name="Firebird" connectionString="User=SYSDBA;Password=masterkey;Database=localhost/3050:C:\Code\Gentle.NET\Source\Gentle.Framework.Tests\Database Files\Gentle_Firebird.fdb;Dialect=3;Charset=UNICODE_FSS;Role=;Connection lifetime=30;Pooling=true;Packet Size=8192;" />
            <DefaultProvider name="Jet" connectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\Code\Gentle.NET\Source\Gentle.Framework.Tests\Database Files\Gentle_MSAccess.mdb;OLE DB Services=-1;" />
            <DefaultProvider name="MySQL" connectionString="Server=10.0.0.2;Database=test;User ID=xxx;Password=xxx" />
            <DefaultProvider name="PostgreSQL" connectionString="Server=10.0.0.2;Database=Test;User ID=xxx;Password=xxx" />
            <DefaultProvider name="Oracle" connectionString="Data Source=kermit.symbiote.sporadicism.com,1521;User ID=gentle;password=xxx" />
            <DefaultProvider name="OracleODP" connectionString="Data Source=kermit.symbiote.sporadicism.com,1521;User ID=gentle;password=xxx" />
            <DefaultProvider name="SQLite" connectionString="URI=file:c:/Code/Gentle.NET/Source/Gentle.Framework.Tests/Database Files/Gentle_SQLite.db" />
            <DefaultProvider name="SQLServer" connectionString="data source=127.0.0.1;initial catalog=Test;user id=xxx;password=xxx;packet size=4096" />
            -->

            <!-- IMPORTANT: You must uncomment ONLY the providers that you will be using. If a provider 
                 is defined below, but Gentle cannot find or load the associated library, an exception
                 will most likely be raised! -->
            <Providers>
                <!-- list known provider assemblies; the assembly .dll suffix is optional -->
                <!-- Provider name="CE"         assembly="Gentle.Provider.CE" /-->
                <!-- Provider name="Firebird"   assembly="Gentle.Provider.Firebird" /-->
                <!-- Provider name="Jet"        assembly="Gentle.Provider.Jet" /-->
                <!-- Provider name="MySQL"      assembly="Gentle.Provider.MySQL.dll" /-->
                <!-- Provider name="Oracle"     assembly="Gentle.Provider.Oracle" /-->
                <!-- Provider name="OracleODP"  assembly="Gentle.Provider.OracleODP" /-->
                <!-- Provider name="PostgreSQL" assembly="Gentle.Provider.PostgreSQL" /-->
                <!-- Provider name="SQLite"     assembly="Gentle.Provider.SQLite" / -->
                <Provider     name="SQLServer"  assembly="Gentle.Provider.SQLServer" />
                <!-- Provider name="Sybase"     assembly="Gentle.Provider.Sybase" / -->
                <!-- Provider name="SybaseASA"  assembly="Gentle.Provider.SybaseASA" / -->
            </Providers>
        </Gentle.Framework>
    </gentle>


    <!-- This section contains the log4net configuration settings -->
    <log4net>
        <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
            <layout type="log4net.Layout.PatternLayout">
                <param name="ConversionPattern" value="%d [%t] %-5p %c (%P{hostname}) [%x] - %m%n" />
            </layout>
        </appender>
        <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
            <param name="File" value="Gentle.NET.log"/>
            <param name="AppendToFile" value="true"/>
            <param name="MaxSizeRollBackups" value="10"/>
            <param name="MaximumFileSize" value="100MB"/>
            <param name="RollingStyle" value="Size"/>
            <param name="StaticLogFileName" value="true"/>
            <layout type="log4net.Layout.PatternLayout">
                <param name="ConversionPattern" value="%d [%t] %-5p %c [%x] - %m%n"/>
            </layout>
        </appender>
        <appender name="ChainsawFun" type="log4net.Appender.RollingFileAppender">
            <param name="File" value="Gentle.NET.chainsaw.xml"/>
            <param name="AppendToFile" value="true"/>
            <param name="MaxSizeRollBackups" value="10"/>
            <param name="MaximumFileSize" value="100MB"/>
            <param name="RollingStyle" value="Size"/>
            <param name="StaticLogFileName" value="true"/>
            <layout type="log4net.Layout.XmlLayoutSchemaLog4j">
            </layout>
        </appender>
        <root>
            <level value="DEBUG" />
            <appender-ref ref="ConsoleAppender" />
            <appender-ref ref="RollingLogFileAppender" />
            <!-- appender-ref ref="ChainsawFun" / -->
        </root>
    </log4net>
</configuration>