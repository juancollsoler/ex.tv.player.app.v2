/*
 * Enumeration of the possible supported statement types
 * Copyright (C) 2005 Morten Mertner
 *
 * This library is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License 2.1 or later, as
 * published by the Free Software Foundation. See the included License.txt
 * or http://www.gnu.org/copyleft/lesser.html for details.
 *
 * $Id: StatementType.cs 1232 2008-03-14 05:36:00Z mm $
 */

namespace Gentle.Framework
{
	/// <summary>
	/// Enumeration of the possible supported statement types.
	/// </summary>
	public enum StatementType
	{
		/// <summary>
		/// This setting is used when the statement type has not been defined or is unknown. When
		/// executing queries of unknown type, the framework assumes a select-type statement is
		/// being executed (i.e. it will use an ExecuteReader to perform the request).
		/// </summary>
		Unknown,
		/// <summary>
		/// This identifies statements executed using the ExecuteReader method.
		/// </summary>
		Select,
		/// <summary>
		/// This identifies statements executed using the ExecuteScalar method. No fields will
		/// be selected. The result set will contain a single numeric row-count value.
		/// </summary>
		Count,
		/// <summary>
		/// This identifies statements executed using the ExecuteScalar method. No fields will
		/// be selected. Use the LastRowId property on the SqlResult to obtain the selected value.
		/// </summary>
		Identity,
		/// <summary>
		/// This identifies statements executed using either the ExecuteScalar (for
		/// autogenerated columns) or ExecuteNonQuery method.
		/// </summary>
		Insert,
		/// <summary>
		/// This identifies statements executed using the ExecuteNonQuery method.
		/// </summary>
		Update,
		/// <summary>
		/// This identifies statements executed using the ExecuteNonQuery method.
		/// </summary>
		Delete,
		/// <summary>
		/// This identifies statements executed using the ExecuteNonQuery method.
		/// </summary>
		SoftDelete
	}
}